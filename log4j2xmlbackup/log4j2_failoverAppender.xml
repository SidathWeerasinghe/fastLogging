<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="debug">
    <Appenders>
        <Console name="Console-Appender" target="SYSTEM_OUT">
            <PatternLayout>
                <pattern>
                    [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
                </pattern>>
            </PatternLayout>
        </Console>
        <!--<File name="File-Appender" fileName="logs/app.log" >
            <PatternLayout>
                <pattern>
                    [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
                </pattern>
            </PatternLayout>
        </File>-->
        <!--asynchronous logging won’t be complete without the mention of the random access file appender.
         A random access file is similar to the file appender we used, except it’s always buffered with a default buffer size of 256 * 1024 bytes.
         The buffer size, as of the current release, is not configurable. This means that once the buffer is pre-allocated with a size at first use,
         it will never grow or shrink during the life of the system.
        You can override the default size with the AsyncLoggerConfig.RingBufferSize system property-->
        <RollingRandomAccessFile name="Rolling-Random-Access-File-Appender"
                                 fileName="logs/rollingrandomaccessfile.log"
                                 filePattern="archive/logs/rollingrandomaccessfile.log.%d{yyyy-MM-dd-hh-mm}.gz">
            <PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"/>
            <Policies>
                <OnStartupTriggeringPolicy />  <!-- a new log file is created every time the JVM starts -->
                <TimeBasedTriggeringPolicy />	 <!-- the log file is rolled based on a date/time pattern -->
                <SizeBasedTriggeringPolicy size="1MB"/>	<!--  the file is rolled when it reaches a certain size -->
            </Policies>

            <DefaultRolloverStrategy max="30"/>
        </RollingRandomAccessFile>
        <!-- http appender -->

        <Http name="Http" url="http://localhost:8080/api/singleTSingleL">
            <Property name="X-Java-Runtime" value="$${java:runtime}" />
            <JsonLayout properties="true"/>
        </Http>

        <!-- failover  appender -->

        <Failover name="FailoverAppender" primary="Http">
            <Failovers>
                <AppenderRef ref="Console-Appender" />
                <AppenderRef ref="Rolling-Random-Access-File-Appender" />
            </Failovers>
        </Failover>
    </Appenders>
    <Loggers>
        <!--PACKAGE LEVEL LOGGING for com.fastLogging.log4j2-->
        <!-- if class level logging enable with different log level, it will get apply class level without considering package level-->
        <Logger  name="com.fastLogging.log4j2" level="info" includeLocation="true" additivity="false">
            <!--<AppenderRef ref="File-Appender"/>-->
            <AppenderRef ref="Rolling-Random-Access-File-Appender"/>
        </Logger>
        <!--CLASS LEVEL LOGGING for com.fastLogging.log4j2.packageOne.AsyncAppenderClassOne-->
        <Logger name="com.fastLogging.log4j2.packageOne.AsyncAppenderClassOne" level="info" additivity="false">
            <!--<AppenderRef ref="File-Appender"/>-->
            <AppenderRef ref="Rolling-Random-Access-File-Appender"/>
        </Logger>
        <!--CLASS LEVEL LOGGING for com.fastLogging.log4j2.packageTwo.AsyncAppenderClassTwo-->
        <Logger name="com.fastLogging.log4j2.packageTwo.AsyncAppenderClassTwo" level="debug" includeLocation="true" additivity="false">
            <!--<AppenderRef ref="File-Appender"/>-->
            <AppenderRef ref="Rolling-Random-Access-File-Appender"/>
        </Logger>
        <Root level="debug">
            <AppenderRef ref="Console-Appender"/>
        </Root>
    </Loggers>
</Configuration>